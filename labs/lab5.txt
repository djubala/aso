Partició per emmagatzemar les còpies de seguretat

Commandes utlitzades:

fdisk /dev/?
  n
  ...
  +?GB
mkfs.ext3 /dev/??
mkdir -m 700 /backup
mount /dev/?? /backup

Modificarem l'fstab. Afegim una entrada:
/dev/?? /backup ext3 ro ? ? ?

Realitzacio de còpies amb tar
Realització de còpies completes

Per posar la data al nom del fitxer, podem fer servir $(date +%Y%m%d%H%M)

tar -cf backup-etc-nivell0-$(date +%Y%m%d%H%M).tar /etc
no se per què no es recomana, en teoria el plaintext dóna bons resultats.
-z (gz), -j (bz2) o -J (xz)

--exclude-vcs-ignores amb un .gitignore?
-X <exclude_file>
Una linia per cada pattern, format man 7 glob

Crear llista de signatures i verificar:
md5sum <files> > <.asc>
md5sum -c <.asc>

tar --newer: OjO, si es un ftxer ha de comencar per . o /

tar -cf backup-test-nivell1-$(date +%Y%m%d%H%M).tar --newer=./backup-test-nivell0-202005192336.tar test

No se m'acudeix res superdolent amb el --newer. Potser queda enregistrat el
modification time de quan s'acaba d'escriure lúltim byte del backup, pero
ha canviat algun fitxer mesntre es feia el backup. (no té gaire sentit). Si el
backup es una copia, la data sera la data de la còpia?

Per fer la segona còpia incremental, utilitzem la mateixa commanda pero --newer
amb el primer backup incremental
omprovem amb tar -tf <.tar>?
md5sum -c <.asc>

Restaurar vol dir descomprimir el nivell 0, després el nivell 1 d'antic a nou.
No veig com gestionar lo dels esborrats. Son indetectables i no s'esborren mai.

Per restaurar un subdirectori. Podem fer servir globs amb --wildcards:
tar -xf <.tar> <path_inside_tar>


